from rest_framework import serializers

class LongestOpenCaseSerializer(serializers.Serializer):
    id = serializers.CharField()
    title = serializers.CharField()
    created_at = serializers.DateTimeField()
    status = serializers.CharField()
    assigned_user = serializers.CharField(allow_null=True)

class CaseStatisticsSerializer(serializers.Serializer):
    total_cases = serializers.IntegerField()
    cases_by_status = serializers.DictField(child=serializers.IntegerField())
    cases_by_priority = serializers.DictField(child=serializers.IntegerField())
    cases_by_category = serializers.DictField(child=serializers.IntegerField())
    cases_created_per_month = serializers.DictField(child=serializers.IntegerField())
    cases_resolved_per_month = serializers.DictField(child=serializers.IntegerField())
    cases_created_per_week = serializers.DictField(child=serializers.IntegerField())
    cases_resolved_per_week = serializers.DictField(child=serializers.IntegerField())
    open_cases_at_month_end = serializers.DictField(child=serializers.IntegerField())
    avg_cases_per_user = serializers.FloatField()
    cases_resolved_per_user = serializers.DictField(child=serializers.IntegerField())
    unassigned_cases = serializers.IntegerField()
    avg_time_to_first_response_hours = serializers.FloatField(allow_null=True)
    avg_time_in_status_hours = serializers.DictField(child=serializers.FloatField())
    cases_reopened = serializers.IntegerField()
    overdue_cases = serializers.IntegerField()
    longest_open_cases = LongestOpenCaseSerializer(many=True)
    sla_compliance_percent = serializers.FloatField(allow_null=True)
    average_resolution_time_days = serializers.FloatField(allow_null=True)
    cases_by_assigned_user = serializers.DictField(child=serializers.IntegerField())
    cases_by_created_user = serializers.DictField(child=serializers.IntegerField()) 