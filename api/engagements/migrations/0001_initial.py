# Generated by Django 5.1.5 on 2025-08-04 07:30

import django.core.validators
import relations.utilities.validation_helpers
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("file", models.FileField(upload_to="case_attachments/")),
                ("filename", models.CharField(max_length=255)),
                ("file_size", models.IntegerField()),
                ("mime_type", models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=(
                models.Model,
                relations.utilities.validation_helpers.TenantValidatorMixin,
            ),
        ),
        migrations.CreateModel(
            name="WorkItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("deadline", models.DateTimeField(blank=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("content", models.TextField()),
            ],
            options={
                "ordering": ["created_at"],
            },
            bases=(
                models.Model,
                relations.utilities.validation_helpers.TenantValidatorMixin,
            ),
        ),
        migrations.CreateModel(
            name="WorkItemCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=100)),
                ("translated_label", models.CharField(blank=True, max_length=100)),
                ("use_translation", models.BooleanField(default=False)),
                (
                    "color",
                    models.CharField(
                        default="#6B7280",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid hex color code (e.g. #RRGGBB).",
                                regex="^#(?:[0-9a-fA-F]{3}){1,2}$",
                            )
                        ],
                    ),
                ),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Option",
                "verbose_name_plural": "Options",
                "ordering": ["sort_order", "label"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkItemPriority",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=100)),
                ("translated_label", models.CharField(blank=True, max_length=100)),
                ("use_translation", models.BooleanField(default=False)),
                (
                    "color",
                    models.CharField(
                        default="#6B7280",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid hex color code (e.g. #RRGGBB).",
                                regex="^#(?:[0-9a-fA-F]{3}){1,2}$",
                            )
                        ],
                    ),
                ),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Option",
                "verbose_name_plural": "Options",
                "ordering": ["sort_order", "label"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkItemStatus",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=100)),
                ("translated_label", models.CharField(blank=True, max_length=100)),
                ("use_translation", models.BooleanField(default=False)),
                (
                    "color",
                    models.CharField(
                        default="#6B7280",
                        max_length=7,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid hex color code (e.g. #RRGGBB).",
                                regex="^#(?:[0-9a-fA-F]{3}){1,2}$",
                            )
                        ],
                    ),
                ),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Option",
                "verbose_name_plural": "Options",
                "ordering": ["sort_order", "label"],
                "abstract": False,
            },
        ),
    ]
