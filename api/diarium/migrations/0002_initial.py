# Generated by Django 5.1.5 on 2025-07-02 11:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("diarium", "0001_initial"),
        ("user", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="activitylog",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activity_logs",
                to="user.tenant",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="user.tenant",
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="uploaded_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "workitem_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="diarium.workitem",
                    ),
                ),
                ("case_reference", models.CharField(max_length=100, unique=True)),
                ("legal_area", models.CharField(max_length=100)),
                ("court_date", models.DateField(blank=True, null=True)),
            ],
            bases=("diarium.workitem",),
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "workitem_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="diarium.workitem",
                    ),
                ),
                ("job_code", models.CharField(max_length=50, unique=True)),
                ("assigned_team", models.CharField(max_length=100)),
                (
                    "estimated_hours",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
            ],
            bases=("diarium.workitem",),
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "workitem_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="diarium.workitem",
                    ),
                ),
                ("ticket_number", models.CharField(max_length=50, unique=True)),
                ("reported_by", models.CharField(max_length=255)),
                (
                    "urgency",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
            bases=("diarium.workitem",),
        ),
        migrations.AddField(
            model_name="workitem",
            name="assigned_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_workitems",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="workitem",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_workitems",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="workitem",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workitems",
                to="user.tenant",
            ),
        ),
        migrations.AddField(
            model_name="attachment",
            name="workitem",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                to="diarium.workitem",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="workitem",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="activity_log",
                to="diarium.workitem",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="user.tenant",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="workitem",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="diarium.workitem",
            ),
        ),
        migrations.AddField(
            model_name="workitementityrole",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="workitementityrole",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workitem_entity_roles",
                to="user.tenant",
            ),
        ),
        migrations.AddField(
            model_name="workitementityrole",
            name="workitem",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="entity_roles",
                to="diarium.workitem",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="workitementityrole",
            unique_together={
                ("workitem", "content_type", "object_id", "role", "tenant")
            },
        ),
    ]
